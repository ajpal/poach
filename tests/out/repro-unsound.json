[{"program_text":"\n(datatype HerbieType (Type String))\n(datatype Math (Num HerbieType i64) (Var HerbieType String) (Fma HerbieType Math Math Math) (If HerbieType Math Math Math) (Less HerbieType Math Math) (LessEq HerbieType Math Math) (Greater HerbieType Math Math) (GreaterEq HerbieType Math Math) (Eq HerbieType Math Math) (NotEq HerbieType Math Math) (Add HerbieType Math Math) (Sub HerbieType Math Math) (Mul HerbieType Math Math) (Div HerbieType Math Math) (Pow HerbieType Math Math) (Atan2 HerbieType Math Math) (Hypot HerbieType Math Math) (And HerbieType Math Math) (Or HerbieType Math Math) (Not HerbieType Math) (Neg HerbieType Math) (Sqrt HerbieType Math) (Cbrt HerbieType Math) (Fabs HerbieType Math) (Ceil HerbieType Math) (Floor HerbieType Math) (Round HerbieType Math) (Log HerbieType Math) (Exp HerbieType Math) (Sin HerbieType Math) (Cos HerbieType Math) (Tan HerbieType Math) (Atan HerbieType Math) (Asin HerbieType Math) (Acos HerbieType Math) (Expm1 HerbieType Math) (Log1p HerbieType Math) (Sinh HerbieType Math) (Cosh HerbieType Math) (Tanh HerbieType Math) (PI HerbieType) (E HerbieType) (INFINITY HerbieType) (TRUE HerbieType) (FALSE HerbieType))\n(let r-zero 0)\n(let r-one 1)\n(let r-two 2)\n(let r-three 3)\n(let r-four 4)\n(let r-neg-one -1)\n(relation universe (Math HerbieType))\n(rule ((= t (Expm1 ty a))) ((universe t ty)))\n(rewrite (Mul ty a b) (Mul ty b a))\n\n(rewrite (Sub ty x x) (Num ty r-zero))\n\n(rewrite (Mul ty x (Num ty r-one)) x)\n\n(rewrite (Div ty x (Num ty r-one)) x)\n\n(rewrite (Neg ty x) (Sub ty (Num ty r-zero) x))\n\n(rewrite (Neg ty x) (Mul ty (Num ty r-neg-one) x))\n\n(rule ((universe t ty)) ((union t (Mul ty (Num ty r-one) t))))\n\n(rewrite (Div ty (Sub ty a b) c)\n         (Sub ty (Div ty a c) (Div ty b c)))\n\n\n(rewrite (Div ty (Mul ty a b) (Mul ty c d)) ;; not defined if c or d is zero\n         (Mul ty (Div ty a c) (Div ty b d)))\n\n\n;; errors if a or b errors\n(rewrite (Add ty a b)\n         (If ty\n             (NotEq ty (Sub ty a b) (Num ty r-zero)) ;; errors if a or b errors\n             (Div ty\n                  (Sub ty (Mul ty a a) (Mul ty b b))\n                  (Sub ty a b))\n             (Add ty a b)))\n\n\n(rewrite (Sub ty (Div ty a b) (Div ty c d)) ;; errors when b = 0 or d = 0\n         (Div ty (Sub ty (Mul ty a d) (Mul ty b c))\n                 (Mul ty b d))) ;; errors when b = 0 or d = 0\n\n\n(rewrite (Sub ty (Mul ty x y) z)\n         (Fma ty x y (Neg ty z)))\n\n\n(rewrite (Expm1 ty x)\n         (Sub ty (Exp ty x) (Num ty r-one)))\n\n\n\n\n(let eggvar1 (Div (Type \"binary64\") (Expm1 (Type \"binary64\") (Add (Type \"binary64\") (Var (Type \"binary64\") \"h0\") (Var (Type \"binary64\") \"h0\"))) (Expm1 (Type \"binary64\") (Var (Type \"binary64\") \"h0\"))))\n\n(run 10)\n\n(check (= (Num ty n) (Num ty m)) (!= n m))\n","evts":[{"sexp_idx":0,"evt":"start","time":{"secs":0,"nanos":1928084}},{"sexp_idx":0,"evt":"end","time":{"secs":0,"nanos":2093385}},{"sexp_idx":1,"evt":"start","time":{"secs":0,"nanos":2093648}},{"sexp_idx":1,"evt":"end","time":{"secs":0,"nanos":4550549}},{"sexp_idx":2,"evt":"start","time":{"secs":0,"nanos":4550757}},{"sexp_idx":2,"evt":"end","time":{"secs":0,"nanos":7603087}},{"sexp_idx":3,"evt":"start","time":{"secs":0,"nanos":7603345}},{"sexp_idx":3,"evt":"end","time":{"secs":0,"nanos":11595124}},{"sexp_idx":4,"evt":"start","time":{"secs":0,"nanos":11595514}},{"sexp_idx":4,"evt":"end","time":{"secs":0,"nanos":15660790}},{"sexp_idx":5,"evt":"start","time":{"secs":0,"nanos":15661225}},{"sexp_idx":5,"evt":"end","time":{"secs":0,"nanos":18979422}},{"sexp_idx":6,"evt":"start","time":{"secs":0,"nanos":18979816}},{"sexp_idx":6,"evt":"end","time":{"secs":0,"nanos":21785722}},{"sexp_idx":7,"evt":"start","time":{"secs":0,"nanos":21786004}},{"sexp_idx":7,"evt":"end","time":{"secs":0,"nanos":24526206}},{"sexp_idx":8,"evt":"start","time":{"secs":0,"nanos":24526476}},{"sexp_idx":8,"evt":"end","time":{"secs":0,"nanos":24634840}},{"sexp_idx":9,"evt":"start","time":{"secs":0,"nanos":24635061}},{"sexp_idx":9,"evt":"end","time":{"secs":0,"nanos":24849289}},{"sexp_idx":10,"evt":"start","time":{"secs":0,"nanos":24849499}},{"sexp_idx":10,"evt":"end","time":{"secs":0,"nanos":24999213}},{"sexp_idx":11,"evt":"start","time":{"secs":0,"nanos":24999416}},{"sexp_idx":11,"evt":"end","time":{"secs":0,"nanos":25149815}},{"sexp_idx":12,"evt":"start","time":{"secs":0,"nanos":25150004}},{"sexp_idx":12,"evt":"end","time":{"secs":0,"nanos":25293948}},{"sexp_idx":13,"evt":"start","time":{"secs":0,"nanos":25294264}},{"sexp_idx":13,"evt":"end","time":{"secs":0,"nanos":25480505}},{"sexp_idx":14,"evt":"start","time":{"secs":0,"nanos":25480711}},{"sexp_idx":14,"evt":"end","time":{"secs":0,"nanos":25646868}},{"sexp_idx":15,"evt":"start","time":{"secs":0,"nanos":25647017}},{"sexp_idx":15,"evt":"end","time":{"secs":0,"nanos":25800654}},{"sexp_idx":16,"evt":"start","time":{"secs":0,"nanos":25800782}},{"sexp_idx":16,"evt":"end","time":{"secs":0,"nanos":25959021}},{"sexp_idx":17,"evt":"start","time":{"secs":0,"nanos":25959218}},{"sexp_idx":17,"evt":"end","time":{"secs":0,"nanos":26202502}},{"sexp_idx":18,"evt":"start","time":{"secs":0,"nanos":26202708}},{"sexp_idx":18,"evt":"end","time":{"secs":0,"nanos":26420071}},{"sexp_idx":19,"evt":"start","time":{"secs":0,"nanos":26420264}},{"sexp_idx":19,"evt":"end","time":{"secs":0,"nanos":26766163}},{"sexp_idx":20,"evt":"start","time":{"secs":0,"nanos":26766365}},{"sexp_idx":20,"evt":"end","time":{"secs":0,"nanos":27033822}},{"sexp_idx":21,"evt":"start","time":{"secs":0,"nanos":27034027}},{"sexp_idx":21,"evt":"end","time":{"secs":0,"nanos":27210596}},{"sexp_idx":22,"evt":"start","time":{"secs":0,"nanos":27210780}},{"sexp_idx":22,"evt":"end","time":{"secs":0,"nanos":27408789}},{"sexp_idx":23,"evt":"start","time":{"secs":0,"nanos":27408999}},{"sexp_idx":23,"evt":"end","time":{"secs":0,"nanos":30710623}},{"sexp_idx":24,"evt":"start","time":{"secs":0,"nanos":30710940}},{"sexp_idx":24,"evt":"end","time":{"secs":0,"nanos":894262710}},{"sexp_idx":25,"evt":"start","time":{"secs":0,"nanos":894263535}},{"sexp_idx":25,"evt":"end","time":{"secs":0,"nanos":897774561}}]}]